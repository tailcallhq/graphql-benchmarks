name: "Run benchmark"
on:
  pull_request_target:
    types: [assigned, opened, synchronize, reopened, edited]
  push:
    branches:
      - main
permissions:
  contents: write
  pull-requests: write
  issues: write
jobs:
  build:
    runs-on: benchmarking-runner
    if: github.event.head_commit.message != 'Update performance results in README.md'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      matrix:
        service:
          [
            apollo_server,
            caliban,
            netflix_dgs,
            gqlgen,
            tailcall,
            async_graphql,
            hasura,
            graphql_jit,
          ]
    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.sha || github.sha }}

      - name: Build devcontainer
        uses: devcontainers/ci@v0.3
        with:
          imageName: graphql-benchmarks
          push: never

      - name: Setup k6
        uses: grafana/setup-k6-action@v1

      - name: Run benchmarks
        run: |
          bash ./graphql/${{ matrix.service }}/setup.sh
          bash run_benchmarks.sh ${{ matrix.service }}
      - name: List benchmark files
        run: |
          ls -la bench*.txt || echo "No matching files found"

      - name: Upload benchmark results
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results
          path: bench*.txt

  analyze:
    needs: build
    runs-on: benchmarking-runner
    env:
      GRAFANA_API_KEY: ${{ secrets.GRAFANA_API_KEY }}
      INFLUXDB_TOKEN: ${{ secrets.INFLUXDB_TOKEN }}
      INFLUXDB_ORG: ${{ secrets.INFLUXDB_ORG }}
      INFLUXDB_URL: ${{ secrets.INFLUXDB_URL }}
    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v4

      - name: Setup influxdb-cli
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "UPLOAD_TO_CLOUD=true" >> $GITHUB_ENV
          mkdir -p influxdb
          cd influxdb
          wget https://download.influxdata.com/influxdb/releases/influxdb2-client-2.7.5-linux-amd64.tar.gz
          tar xvzf influxdb2-client-2.7.5-linux-amd64.tar.gz
          cp influx /usr/local/bin/
          influx config create --config-name benchmark --host-url $INFLUXDB_URL --org $INFLUXDB_ORG --token $INFLUXDB_TOKEN --active
          cd ..
          rm -rf influxdb

      - name: Download all benchmark results
        uses: actions/download-artifact@v3
        with:
          name: benchmark-results
          path: .

      - name: List downloaded artifacts
        run: ls -la bench*.txt || echo "No matching files found"

      - name: Analyze results
        run: |
          bash run_analyze_script.sh
      - name: Print benchmark results
        run: cat ./results.md

      - name: Comment benchmark results on PR
        if: github.event_name == 'pull_request_target'
        uses: peter-evans/commit-comment@v3
        with:
          sha: ${{ github.event.pull_request.head.sha }}
          body-path: "results.md"
          reactions: eyes

      - name: Commit and push changes (on main branch)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_author: Author <actions@github.com>
          commit_message: "[ci skip] update performance results in README.md"
